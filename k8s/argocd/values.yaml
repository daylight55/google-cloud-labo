global:
  image:
    tag: v2.9.3

configs:
  cm:
    url: https://argocd.example.com  # 実際のドメインに変更してください
    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: $github-oauth-client-id  # Secret Managerから取得
            clientSecret: $github-oauth-client-secret  # Secret Managerから取得
            orgs:
            - name: your-org-name  # GitHubの組織名に変更してください
    application.resourceTrackingMethod: annotation
    timeout.reconciliation: 180s
    admin.enabled: true
    statusbadge.enabled: true
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs

server:
  extraArgs:
    - --insecure
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - argocd.example.com  # 実際のドメインに変更してください
    tls:
      - hosts:
          - argocd.example.com  # 実際のドメインに変更してください

  rbacConfig:
    policy.default: role:readonly
    policy.csv: |
      p, role:org-admin, applications, *, */*, allow
      p, role:org-admin, clusters, get, *, allow
      p, role:org-admin, repositories, get, *, allow
      p, role:org-admin, repositories, create, *, allow
      p, role:org-admin, repositories, update, *, allow
      p, role:org-admin, repositories, delete, *, allow
      g, admin, role:admin

repoServer:
  replicas: 2

applicationSet:
  enabled: true
  replicaCount: 2

redis:
  enabled: true

controller:
  replicas: 2
